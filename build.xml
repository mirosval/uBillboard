<?xml version="1.0"?>
<project name="uBillboard Build" basedir="." default="build">
	<!-- Main project name -->
	<property name="project_name" value="uBillboard" />
	<!-- This is the basename of all related files (php, js, css) -->
	<property name="file_name" value="billboard" />
	<!-- Software version -->
	<property name="version" value="3.1.1" />
	
	<!-- JS Compiler taskdef -->
	<taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask" classpath="/usr/local/closure/compiler.jar"/>
	
	<!-- Tasks: -->
	
	<!-- Cleanup task -->
	<target name="clean">
		<delete dir="build" />
	</target>
	
	<!-- Update version string in all occurrences -->
	<target name="update_version">
		<replaceregexp file="js/${file_name}.js" match="Version: [0-9]\.[0-9]\.[0-9]" replace="Version: ${version}" byline="true"/>
		<replaceregexp file="${file_name}.php" match="Version: [0-9]\.[0-9]\.[0-9]" replace="Version: ${version}" byline="true"/>
		<replaceregexp file="${file_name}.php" match="define\('UDS_BILLBOARD_VERSION', '[0-9]\.[0-9]\.[0-9]'\);" replace="define\('UDS_BILLBOARD_VERSION', '${version}'\);" byline="true"/>
		<echo>Updated Version Strings</echo>
	</target>
	
	<!-- Compress all relevant JS -->
	<target name="minify_js" depends="clean">
		<delete file="js/${file_name}.min.js" />
		
		<jscomp compilationLevel="simple" warning="default" debug="false" output="js/${file_name}.min.js">
			<sources dir="${basedir}/js">
				<file name="${file_name}.js"/>
			</sources>
		</jscomp>
	</target>
	
	<!-- Compress all rlevant CSS -->
	<target name="minify_css" depends="clean">
		<delete file="css/${file_name}.min.css" />
		
		<java jar="/usr/local/yui/yuicompressor.jar" fork="true">  
			<arg value="${basedir}/css/${file_name}.css" />
			<arg value="-o" />  
			<arg value="${basedir}/css/${file_name}.min.css" />
		</java>
		<echo>Compressing ${file_name}.css</echo>
	</target>
	
	<!-- Main Target -->
	<target name="build" depends="update_version,minify_css,minify_js">
		<echo>Done</echo>
	</target>
	
	<!-- Package -->
	<target name="package" depends="build">
		<!-- Create dir for compression -->
		<mkdir dir="build/${project_name}" />
		
		<!-- Create dir for cache -->
		<mkdir dir="build/${project_name}/cache" />
		
		<!-- Copy CSS -->
		<copy todir="build/${project_name}/css">
			<fileset dir="css" />
		</copy>
		
		<!-- Copy JS -->
		<copy todir="build/${project_name}/js">
			<fileset dir="js" />
		</copy>
		
		<!-- Copy Images -->
		<copy todir="build/${project_name}/images">
			<fileset dir="images" />
		</copy>
		
		<!-- Copy Language files -->
		<copy todir="build/${project_name}/lang">
			<fileset dir="lang" />
		</copy>
		
		<!-- Copy Help files -->
		<copy todir="build/${project_name}/help">
			<fileset dir="help" />
		</copy>
		
		<!-- Copy PHP Files -->
		<copy todir="build/${project_name}">
			<fileset dir=".">
				<include name="*.php" />
			</fileset>
		</copy>
		
		<!-- Copy PHP Admin Files -->
		<copy todir="build/${project_name}/admin">
			<fileset dir="admin" />
		</copy>

		<!-- Copy PHP Lib Files -->
		<copy todir="build/${project_name}/lib">
			<fileset dir="lib" />
		</copy>
		
		<!-- Create Archive -->
		<zip destfile="build/${project_name}.zip" basedir="build/${project_name}" />
	</target>
	
	<!-- Package For Beta -->
	<target name="package_beta" depends="build">
		<!-- Create dir for compression -->
		<mkdir dir="build/${project_name}" />
		
		<!-- Create dir for cache -->
		<mkdir dir="build/${project_name}/cache" />
		
		<!-- Copy CSS -->
		<copy todir="build/${project_name}/css">
			<fileset dir="css" />
		</copy>
		
		<!-- Copy JS -->
		<copy todir="build/${project_name}/js">
			<fileset dir="js">
				<exclude name="${file_name}.js" />
			</fileset>
		</copy>
		
		<!-- Copy Images -->
		<copy todir="build/${project_name}/images">
			<fileset dir="images" />
		</copy>
		
		<!-- Copy Language files -->
		<copy todir="build/${project_name}/lang">
			<fileset dir="lang" />
		</copy>
		
		<!-- Copy Help files -->
		<copy todir="build/${project_name}/help">
			<fileset dir="help" />
		</copy>
		
		<!-- Copy PHP Files -->
		<copy todir="build/${project_name}">
			<fileset dir=".">
				<include name="*.php" />
			</fileset>
		</copy>
		
		<!-- Copy PHP Admin Files -->
		<copy todir="build/${project_name}/admin">
			<fileset dir="admin" />
		</copy>

		<!-- Copy PHP Lib Files -->
		<copy todir="build/${project_name}/lib">
			<fileset dir="lib" />
		</copy>
		
		<!-- Create Archive -->
		<zip destfile="build/${project_name}.zip" basedir="build/${project_name}" />
	</target>
</project> 